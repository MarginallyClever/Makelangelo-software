name: Java CI with Maven

env:
  UPLOAD_URL: https://uploads.github.com/repos/MarginallyClever/Makelangelo-software/releases/54908875/assets{?name,label}
  RELEASE_ID: 54908875

on:
  push:
    branches:
      - master
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4.7.0
        with:
          distribution: 'temurin'
          java-version: '22'
          cache: 'maven'

      - name: Build and Test with Maven
        run: ./mvnw -B test -Djava.awt.headless=true

      - name: Package with Maven
        run: ./mvnw -B clean package -DskipTests

      - name: Prepare target/package for upload
        shell: bash
        run: |
          mkdir -p target/package &&
          cp src/main/package/*.bat target/package/ &&
          cp src/main/package/start* target/package/ &&
          cp src/main/package/thankyou.* target/package/ &&
          cp CONTRIBUTING.md target/package/ &&
          cp LICENSE target/package/ &&
          cp README.md target/package/

      - name: Upload common files
        uses: actions/upload-artifact@v4
        with:
          name: shared
          retention-days: 1
          path: |
            src/main/package/jpackage*
            src/main/package/logo*
            LICENSE
            README
            target/package/*

  package:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4.7.0
        with:
          distribution: 'temurin'
          java-version: '22'

      - uses: actions/download-artifact@v4
        with:
          name: shared

      - name: Build platform-specific installer
        shell: bash
        run: |
          set -x
          APP_VERSION=$(ls -1 target/package/Makelangelo-*-with-dependencies.jar | sed "s/.*Makelangelo-\([^-]*\)-with-dependencies.jar/\1/")
          sed -i.bak "s/\(--app-version\).*/\1 $APP_VERSION/" src/main/package/jpackage.cfg
          jpackage "@src/main/package/jpackage.cfg" "@src/main/package/jpackage-${{ matrix.os }}.cfg" --main-jar "Makelangelo-$APP_VERSION-with-dependencies.jar"
          INSTALLER=$(find . -maxdepth 1 -iname 'makelangelo*' | grep -E '(msi$|dmg$|deb$)' | sed "s,./,,")
          NIGHTLY_NAME=$(echo $INSTALLER | sed "s/[Mm]akelangelo\(.*\)\.\(.*\)/Makelangelo-nightly-${{ github.run_id }}.\2/")
          echo "INSTALLER=$INSTALLER" >> $GITHUB_ENV
          echo "NIGHTLY_NAME=$NIGHTLY_NAME" >> $GITHUB_ENV

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: installer-${{ matrix.os }}
          retention-days: 1
          path: ${{ env.INSTALLER }}

  upload:
    needs: package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Flatten installer paths
        run: |
          mkdir flat
          find artifacts -type f -name "Makelangelo-nightly-*" -exec cp {} flat/ \;
          ls -lh flat

      - name: Upload all platform installers
        uses: WebFreak001/deploy-nightly@v3.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          upload_url: ${{ env.UPLOAD_URL }}
          release_id: ${{ env.RELEASE_ID }}
          asset_path: flat
          asset_name: Makelangelo-nightly-$$
          asset_content_type: application/octet-stream
          max_releases: 1

  cleanup-nightlies:
    needs: upload
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Delete old nightly releases
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const releases = await github.rest.repos.listReleases({ owner, repo });
            const nightlies = releases.data
              .filter(r => r.name.includes("nightly") && !r.draft)
              .sort((a, b) => new Date(b.created_at) - new Date(a.created_at));
            for (let i = 1; i < nightlies.length; i++) {
              await github.rest.repos.deleteRelease({ owner, repo, release_id: nightlies[i].id });
              console.log(`Deleted old nightly release: ${nightlies[i].name}`);
            }
