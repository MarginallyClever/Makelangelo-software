<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.marginallyclever</groupId>
	<artifactId>Makelangelo</artifactId>
	<version>7.54.1</version>
	<name>Makelangelo</name>
		<description>Makelangelo Software is a Java program that prepares art for CNC plotters.  It is especially designed for the Makelangelo Robot.
It pairs really well with Marlin-polargraph, the code in the brain of the robot that receives instructions and moves the motors.</description>
	<url>https://www.makelangelo.com/</url>

	<issueManagement>
		<url>https://github.com/MarginallyClever/Makelangelo-software/issues</url>
		<system>GitHub Issues</system>
	</issueManagement>

	<licenses>
		<license>
			<name>GPLv2</name>
			<url>https://opensource.org/licenses/GPL-2.0</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<url>https://github.com/MarginallyClever/Makelangelo-software</url>
		<connection>scm:git:git@github.com:MarginallyClever/Makelangelo-software.git</connection>
	</scm>

	<organization>
		<name>Marginally Clever Robots, Limited.</name>
		<url>https://www.marginallyclever.com/</url>
	</organization>

	<developers>
		<developer>
			<id>dr</id>
			<name>Dan Royer</name>
			<email>dan@marginallyclever.com</email>
			<url>https://github.com/i-make-robots</url>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>-8</timezone>
		</developer>

		<developer>
			<id>pc</id>
			<name>Peter Colapietro</name>
			<email>petercolapietro@gmail.com</email>
			<url>https://github.com/virtuoushub</url>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>-5</timezone>
		</developer>
	</developers>

	<pluginRepositories>
		<pluginRepository>
			<id>maven2</id>
			<url>https://repo.maven.apache.org/maven2/</url>
		</pluginRepository>
	</pluginRepositories>

	<repositories>
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
		<repository>
			<id>my-local-repo</id>
			<url>file://${project.basedir}/java/local-maven-repo</url>
		</repository>
		<repository>
			<id>jogamp-remote</id>
			<name>jogamp test mirror</name>
			<url>https://www.jogamp.org/deployment/maven/</url>
			<layout>default</layout>
		</repository>
	</repositories>

	<build>
		<!-- See: http://maven.apache.org/plugins/maven-resources-plugin/examples/filter.html
			and http://stackoverflow.com/a/3697482 -->
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/*.properties</exclude>
				</excludes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<release>${minimum.java.version}</release>
					<useIncrementalCompilation>false</useIncrementalCompilation>
					<encoding>UTF-8</encoding>
					<compilerArgs>
						<compilerArg>-Xlint:unchecked</compilerArg>
						<compilerArg>-Xlint:deprecation</compilerArg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifestEntries>
							<SplashScreen-Image>splash.png</SplashScreen-Image>
						</manifestEntries>
						<manifest>
							<mainClass>com.marginallyclever.makelangelo.Makelangelo</mainClass>
							<addClasspath>true</addClasspath>
						</manifest>
					</archive>
					<descriptors>
						<descriptor>${project.basedir}/src/main/assembly/application.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<!-- this is used for inheritance merges -->
						<phase>package</phase>
						<!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.3.1</version>
			</plugin>

			<!-- Beginning of plugins defined originally only in Super POM -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
			</plugin>
			<plugin>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.5.2</version>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<archive>
						<manifestEntries>
							<SplashScreen-Image>splash.png</SplashScreen-Image>
						</manifestEntries>
						<manifest>
							<mainClass>com.marginallyclever.makelangelo.Makelangelo</mainClass>
							<addClasspath>true</addClasspath>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/package</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/package</directory>
									<includes>
										<include>avrdude.*</include>
										<include>firmware.hex</include>
									</includes>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-fat-jar</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/package</outputDirectory>
							<resources>
								<resource>
									<directory>target</directory>
									<includes>
										<include>Makelangelo*-with-dependencies.jar</include>
									</includes>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.9.1</version>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M5</version>
				<configuration>
					<parallel>methods</parallel>
					<threadCount>10</threadCount>
					<!--<argLine>-Djava.awt.headless=true</argLine>-->
				</configuration>
			</plugin>
			<!-- End of plugins defined originally only in Super POM -->
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<ignoreNonCompile>${maven-dependency-plugin.ignoreNonCompile}</ignoreNonCompile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M3</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>${minimum.maven.version}</version>
									<message>********** Minimum Maven Version is
										${minimum.maven.version}. Please upgrade Maven before
										continuing (run "mvn --version" to check). **********</message>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
					<execution>
						<id>enforce-java</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireJavaVersion>
									<version>${minimum.java.version}</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.8</version>
			</plugin>
			<plugin>
				<groupId>io.github.git-commit-id</groupId>
				<artifactId>git-commit-id-maven-plugin</artifactId>
				<version>5.0.0</version>
				<executions>
					<execution>
						<id>get-the-git-infos</id>
						<goals>
							<goal>revision</goal>
						</goals>
						<phase>initialize</phase>
					</execution>
				</executions>
				<configuration>
					<verbose>true</verbose>
					<failOnNoGitDirectory>false</failOnNoGitDirectory>

					<generateGitPropertiesFile>true</generateGitPropertiesFile>
					<generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
					<includeOnlyProperties>
						<includeOnlyProperty>^git.build.(time|version)$</includeOnlyProperty>
						<includeOnlyProperty>^git.commit.id.(abbrev|full)$</includeOnlyProperty>
						<includeOnlyProperty>^git.branch$</includeOnlyProperty>
						<includeOnlyProperty>^git.dirty$</includeOnlyProperty>
					</includeOnlyProperties>
					<commitIdGenerationMode>full</commitIdGenerationMode>
				</configuration>
			</plugin>
			<!-- Code Coverage report generation -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.11</version>
				<configuration>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-code-coverage-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.3.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>3.1.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
				</plugin>
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>5.8.1</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.11.0</version>
		</dependency>
		<!-- https://github.com/java-native/jssc/ -->
		<dependency>
			<groupId>io.github.java-native</groupId>
			<artifactId>jssc</artifactId>
			<version>2.9.4</version>
		</dependency>
		<!-- opengl graphics -->
		<dependency>
			<groupId>org.jogamp.gluegen</groupId>
			<artifactId>gluegen-rt-main</artifactId>
			<version>2.5.0-rc-20230523</version>
		</dependency>
		<dependency>
			<groupId>org.jogamp.jogl</groupId>
			<artifactId>jogl-all-main</artifactId>
			<version>2.5.0-rc-20230523</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.14</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpcore -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
			<version>4.4.15</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpmime -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>4.5.14</version>
		</dependency>
		<!-- for bz2 compression -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.26.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/de.sciss/jrpicam -->
		<dependency>
			<groupId>de.sciss</groupId>
			<artifactId>jrpicam</artifactId>
			<version>0.2.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/net.sourceforge/kabeja -->
		<dependency>
			<groupId>org.kabeja</groupId>
			<artifactId>kabeja</artifactId>
			<version>0.4</version>
		</dependency>
		<!-- logging -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.4.12</version>
		</dependency>
		<!-- logging -->
		<dependency>
			<groupId>org.codehaus.janino</groupId>
			<artifactId>janino</artifactId>
			<version>3.1.9</version>
		</dependency>
		<!-- logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>2.0.5</version>
		</dependency>

		<dependency>
			<groupId>javax.vecmath</groupId>
			<artifactId>vecmath</artifactId>
			<version>1.5.2</version>
		</dependency>
		<!-- test suite -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>5.10.0</version>
			<scope>test</scope>
		</dependency>
		<!-- used by PreferenceHelper -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20231013</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains</groupId>
			<artifactId>annotations</artifactId>
			<version>24.0.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/commons-validator/commons-validator -->
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<version>1.7</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.xmlgraphics/batik-xml -->
		<dependency>
			<groupId>org.apache.xmlgraphics</groupId>
			<artifactId>batik-all</artifactId>
			<version>1.17</version>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-swing-junit</artifactId>
			<version>3.17.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
			<version>4.2.0</version>
			<scope>test</scope>
		</dependency>
		<!-- qoi image format support -->
		<dependency>
			<groupId>me.saharnooby</groupId>
			<artifactId>qoi-java</artifactId>
			<version>1.2.1</version>
		</dependency>
		<!-- Also add this, if you want to use QOI with ImageIO -->
		<dependency>
			<groupId>me.saharnooby</groupId>
			<artifactId>qoi-java-awt</artifactId>
			<version>1.2.1</version>
		</dependency>

		<dependency>
			<groupId>com.formdev</groupId>
			<artifactId>flatlaf</artifactId>
			<version>3.2.1</version>
		</dependency>

		<!-- for voronoi -->
		<!-- https://mvnrepository.com/artifact/org.locationtech.jts/jts -->
		<dependency>
			<groupId>org.locationtech.jts</groupId>
			<artifactId>jts-core</artifactId>
			<version>1.19.0</version>
		</dependency>
        <dependency>
            <groupId>io.github.classgraph</groupId>
            <artifactId>classgraph</artifactId>
            <version>4.8.161</version>
        </dependency>
		<dependency>
			<groupId>org.reflections</groupId>
			<artifactId>reflections</artifactId>
			<version>0.10.2</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.github.marginallyclever</groupId>
			<artifactId>nodegraphcore</artifactId>
			<version>1.0.21</version>
			<scope>compile</scope>
		</dependency>
    </dependencies>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<minimum.maven.version>3.8.1</minimum.maven.version>
		<minimum.java.version>17</minimum.java.version>
		<jogl.version>2.4.0-rc-20200307</jogl.version>
		<maven-dependency-plugin.ignoreNonCompile>true</maven-dependency-plugin.ignoreNonCompile>
		<maven.compiler.source>${minimum.java.version}</maven.compiler.source>
		<maven.compiler.target>${minimum.java.version}</maven.compiler.target>
		<maven.compiler.release>${minimum.java.version}</maven.compiler.release>
	</properties>
</project>